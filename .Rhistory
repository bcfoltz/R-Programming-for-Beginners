View(long_data)
oh_ham <-
get_acs(geography = "tract",
state = "OH",
county = "Hamilton",
geometry = TRUE,
variables = c("B02001_001E",
"B02009_001E"),
output = "wide")
oh_ham %>%
ggplot(aes(fill = `Any Black`)) +
geom_sf(size = NA) +
coord_sf(crs = "+proj=longlat +datum=WGS84", datum = NA) +
scale_fill_continuous(name = "Any Black\n",
low = "#d4d5f9",
high = "#00025b") +
theme_minimal() +
ggtitle("Proportion Any Black")
oh_ham <-
get_acs(geography = "tract",
state = "OH",
county = "Hamilton",
geometry = TRUE,
variables = c("B02001_001E",
"B02009_001E"),
output = "wide") %>%
select(-ends_with("M")) %>%
rename(`Total Population` = B02001_001E,
`Any Black` = B02009_001E) %>%
mutate(`Any Black` = `Any Black` / `Total Population`)
oh_ham %>%
ggplot(aes(fill = `Any Black`)) +
geom_sf(size = NA) +
coord_sf(crs = "+proj=longlat +datum=WGS84", datum = NA) +
scale_fill_continuous(name = "Any Black\n",
low = "#d4d5f9",
high = "#00025b") +
theme_minimal() +
ggtitle("Proportion Any Black")
oh_state <-
get_acs(geography = "tract",
state = "OH",
geometry = TRUE,
variables = c("B02001_001E",
"B02009_001E"),
output = "wide") %>%
select(-ends_with("M")) %>%
rename(`Total Population` = B02001_001E,
`Any Black` = B02009_001E) %>%
mutate(`Any Black` = `Any Black` / `Total Population`)
oh_state %>%
ggplot(aes(fill = `Any Black`)) +
geom_sf(size = NA) +
coord_sf(crs = "+proj=longlat +datum=WGS84", datum = NA) +
scale_fill_continuous(name = "Any Black\n",
low = "#d4d5f9",
high = "#00025b") +
theme_minimal() +
ggtitle("Proportion Any Black")
urbans <- tigris::urban_areas(cb = TRUE, class = "sf")
urbans <- tigris::urban_areas(cb = TRUE, class = "sf")
urbans <- tigris::urban_areas(cb = TRUE, class = "sf")
install.packages("ggeffects")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(broom)
library(ggeffects)
library(mtcars)
mtcars
lm_cars <- lm(mpg ~ disp + wt, data = mtcars)
summary(lm_cars)
glm_cars <- glm(am ~ disp + wt, data = mtcars, family = binomial(link = "logit"))
summary(glm_cars)
lm_cars %>% tidy()
glm_cars %>% tidy()
lm_cars %>% tidy()
glm_cars %>% tidy()
glance(lm_cars)
glance(glm_cars)
augment(lm_cars) %>% head()
augment(glm_cars) %>% head()
mtcars_fac <- mtcars %>%
mutate(cylfac = as.factor(cyl))
lm2_cars <- lm(mpg ~ wt + disp + cylfac, data = mtcars_fac)
summary(lm2_cars)
mtcars_fac <- mtcars %>%
mutate(cylfac = as.factor(cyl), vs_fac = as.factor(vs))
lm2_cars <- lm(mpg ~ wt + disp + cylfac + vs_fac, data = mtcars_fac)
summary(lm2_cars)
mtcars_fac <- mtcars %>%
mutate(cylfac = as.factor(cyl), vs_fac = as.factor(vs))
lm2_cars <- lm(mpg ~ wt + disp + cylfac + vs_fac, data = mtcars_fac)
summary(lm2_cars)
mtcars_fac %>%
nest_by(cylfac) %>%
mutate(model = list(lm(mpg ~ wt + disp + vs_fac))) %>%
summarise(tidy(model), .groups = "drop")
mtcars_fac <- mtcars %>%
mutate(cylfac = as.factor(cyl), vs_fac = as.factor(vs))
lm2_cars <- lm(mpg ~ wt + disp + cylfac + vs_fac, data = mtcars_fac)
summary(lm2_cars)
mtcars_fac %>%
nest_by(cylfac) %>%
mutate(model = list(lm(mpg ~ wt + disp + vs_fac, data = mtcars_fac))) %>%
summarise(tidy(model), .groups = "drop")
mtcars_fac <- mtcars %>%
mutate(cylfac = as.factor(cyl), vs_fac = as.factor(vs))
lm2_cars <- lm(mpg ~ wt + disp + cylfac + vs_fac, data = mtcars_fac)
summary(lm2_cars)
mtcars_fac %>%
nest_by(cylfac) %>%
mutate(model = list(lm(mpg ~ wt + disp + vs_fac, data = data))) %>%
summarise(tidy(model), .groups = "drop")
mtcars_fac <- mtcars %>%
mutate(cylfac = as.factor(cyl), vs_fac = as.factor(vs))
lm2_cars <- lm(mpg ~ wt + disp + cylfac + vs_fac, data = mtcars_fac)
summary(lm2_cars)
mtcars_fac %>%
nest_by(cylfac) %>%
mutate(model = list(lm(mpg ~ wt + disp + vs_fac, data = mtcars_fac))) %>%
summarise(tidy(model), .groups = "drop")
library(gapminder)
install.packages("gapminder")
library(gapminder)
library(gapminder)
ggplot(data = gapminder,
aes(x = year, y = lifeExp, color = continent)) +
geom_point(position = position_jitter(1,0), size = 0.5) +
geom_smooth()
ggplot(data = gapminder,
aes(x = year, y = lifeExp, color = continent)) +
geom_point(position = position_jitter(1,0), size = 0.5) +
geom_smooth(method = "glm", formula = y ~ x)
ggplot(data = gapminder,
aes(x = year, y = lifeExp, color = continent)) +
geom_point(position = position_jitter(1,0), size = 0.5) +
geom_smooth(method = "glm", formula = y ~ poly(x, 2))
?ggeffects
?ggeffect
ex_dat <- data.frame(num1 = rnorm(200,1,2),
fac1 = sample(c(1,2,3), 200, TRUE),
num2 = rnorm(200,0,3),
fac2 = sample(c(1,2))) %>%
mutate(yn = num1 * 0.5 + fac1 * 1.1 + num2 * 0.7 +
fac2 - 1.5 + rnorm(200,0,2)) %>%
mutate(yb = as.numeric(yn > mean(yn))) %>%
mutate(fac1 = factor(fac1, labels = c("A", "B", "C")),
fac2 = factor(fac2, labels = c("Yes", "No")))
lm_1 <- lm(yn ~ num1 + fac1, data = ex_dat)
lm_1_est <- ggpredict(lm_1, terms = "num1")
View(lm_1_est)
lm_1_est
plot(lm_1_est)
glm(yb ~ num1 + fac1 + num2 + fac2, data = ex_dat, family = binomial(link = "logit")) %>%
ggpredict(terms = c("num1", 'fac1')) %>% plot()
glm(yb ~ num1 + fac1 + num2 + fac2, data = ex_dat, family = binomial(link = "logit")) %>%
ggpredict(terms = c("num1", 'fac1')) %>% plot(facet = TRUE)
glm(yb ~ num1 + fac1 + num2 + fac2, data = ex_dat, family = binomial(link = "logit")) %>%
ggpredict(terms = c("num1[all]", 'fac1')) %>% plot(facet = TRUE)
glm(yb ~ num1 + fac1 + num2 + fac2, data = ex_dat, family = binomial(link = "logit")) %>%
ggpredict(terms = c("num1[-1,0,1]", 'fac1[A,B]')) %>% plot(facet = TRUE)
glm(yb ~ num1 + fac1 + num2 + fac2, data = ex_dat, family = binomial(link = "logit")) %>%
ggpredict(terms = c("num1[meansd]", 'num2[minmax]')) %>% plot(facet = TRUE)
lm(yn ~ fac1 + fac2, data = ex_dat) %>%
ggpredict(terms = c("fac1", "fac2")) %>% plot()
install.packages("pander")
library(pander)
pander(lm_1)
pander(lm_1)
pander(summary(lm_1))
install.packages("gt")
install.packages("flextable")
library(gt)
tes_chars <- starwars %>%
unnest(films) %>%
unnest(starships, keep_empty = TRUE) %>%
filter(films == "The Empire Strikes Back") %>%
select(name, species, starships, mass, height) %>%
distinct(name, .keep_all = TRUE) %>%
mutate(starships = ifelse(name == "Obi-Wan Kenobi" | is.na(starships),
"No Ship", starships))
glimpse(tes_chars)
tes_chars %>%
gt()
tes_chars %>%
group_by(starships) %>%
gt()
tes_chars %>%
group_by(starships) %>%
gt(rowname_col = "name")
tes_chars %>%
group_by(starships) %>%
gt(rowname_col = "name") %>%
tab_header(
title = "Star Wars Characters",
subtitle = "The Empire Strikes Back"
)
tes_chars %>%
group_by(starships) %>%
gt(rowname_col = "name") %>%
tab_header(
title = "Star Wars Characters",
subtitle = "The Empire Strikes Back"
) %>%
tab_spanner(
label = "Vitals",
columns = vars(mass, height)
)
tes_chars %>%
group_by(starships) %>%
gt(rowname_col = "name") %>%
tab_header(
title = "Star Wars Characters",
subtitle = "The Empire Strikes Back"
) %>%
tab_spanner(
label = "Vitals",
columns = vars(mass, height)
) %>%
cols_label(
mass = "Mass (kg)",
height = "Height (cm)",
species = "Species"
)
tes_chars %>%
group_by(starships) %>%
gt(rowname_col = "name") %>%
tab_header(
title = "Star Wars Characters",
subtitle = "The Empire Strikes Back"
) %>%
tab_spanner(
label = "Vitals",
columns = vars(mass, height)
) %>%
cols_label(
mass = "Mass (kg)",
height = "Height (cm)",
species = "Species"
) %>%
fmt_number(
columns = vars(mass),
decimals = 0
)
tes_chars %>%
group_by(starships) %>%
gt(rowname_col = "name") %>%
tab_header(
title = "Star Wars Characters",
subtitle = "The Empire Strikes Back"
) %>%
tab_spanner(
label = "Vitals",
columns = vars(mass, height)
) %>%
cols_label(
mass = "Mass (kg)",
height = "Height (cm)",
species = "Species"
) %>%
cols_align(
align = "center",
columns = vars(species, mass, height)
)
tes_chars %>%
group_by(starships) %>%
gt(rowname_col = "name") %>%
tab_header(
title = "Star Wars Characters",
subtitle = "The Empire Strikes Back"
) %>%
tab_spanner(
label = "Vitals",
columns = vars(mass, height)
) %>%
cols_label(
mass = "Mass (kg)",
height = "Height (cm)",
species = "Species"
) %>%
cols_align(
align = "center",
columns = vars(species, mass, height)
) %>%
row_group_order(
groups = c("X-wing", "Millennium Falcon")
)
install.packages("modelsummary")
library(modelsummary)
mod_1 <- lm(mpg ~ wt + disp, data = mtcars)
msummary(mod_1)
mod_1 <- lm(mpg ~ wt, data = mtcars)
msummary(mod_1)
msummary(mod_1)
mod_1 <- lm(mpg ~ wt + disp, data = mtcars)
msummary(mod_1)
msummary(mod_1)
mod_2 <- lm(mpg ~ hp + weight, data = mtcars)
mod_1 <- lm(wt, data = mtcars)
mod_1 <- lm(mpg ~ wt, data = mtcars)
mod_2 <- lm(mpg ~ hp + wt, data = mtcars)
mod_3 <- lm(mpg ~ hp + wt + factor(am), data = mtcars)
model_list <- list("Model 1" = mod_1,
"Model 2" = mod_2,
"Model 3" = mod_3)
msummary(model_list)
msummary(model_list)
msummary(model_list, output = "gt") %>%
tab_header(
title = "Table 1. Linear Models",
subtitle = "DV: Miles per Gallon"
)
msummary(model_list, output = "gt") %>%
tab_header(
title = "Table 1. Linear Models",
subtitle = "DV: Miles per Gallon"
)
install.packages("gtsummary")
library(gtsummary)
mtcars %>%
select(1:9) %>%
tbl_summary()
mtcars %>%
select(1:9) %>%
tbl_summary(by = "am")
mtcars %>%
select(1:9) %>%
tbl_summary(by = "am") %>%
as_gt() %>%
tab_spanner(
label = "Transmission",
columns = starts_with("stat_")
) %>%
tab_header(
title = "Motor Trend Cars",
subtitle = "Descriptive Statistics"
)
install.packages("corrplot")
library(corrplot)
corrplot(
cor(mtcars),
addCoef.col = "white",
addCoefasPercent = T,
type = "upper",
order = "AOE"
)
install.packages(c("cachem", "data.table", "dbplyr", "dtplyr", "fastmap", "forecast", "fs", "gh", "httpuv", "httr", "lubridate", "RcppArmadillo", "RcppParallel", "readr", "readxl", "sourcetools", "tidyverse", "tseries", "utf8", "xfun", "xts"))
install.packages("targets")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
tbl_df(diamonds)
as.tibble(diamonds)
as_tibble(diamonds)
diamonds$carat %>%
mean()
as_tibble(diamonds)
diamonds$carat %>%
round(2)
mean()
as_tibble(diamonds)
diamonds$carat %>%
round(2) %>%
mean()
as_tibble(diamonds)
diamonds$x %>%
round(2) %>%
mean()
install.packages("devtools")
devtools::install_github("rstudio/EDAWR")
library(EDAWR)
storms
cases$country
names(cases)[-1]
unlist(cases[1:3], 2:4)
pollution$city
pollution$city[1,3,5]
pollution$amount[1,3,5]
storms %>%
gather(cases, "year", "n", 2:4)
library(tidyverse)
storms %>%
gather(cases, "year", "n", 2:4)
cases %>%
gather(cases, "year", "n", 2:4)
gather(cases, "year", "n", 2:4)
cases  %>%
pivot_longer(!country, names_to = "year", values_to = "n")
pollution %>%
pivot_wider(!city, names_from = size, values_from = amout)
pollution %>%
pivot_wider(!city, names_from = size, values_from = amount)
pollution %>%
pivot_wider(names_from = size, values_from = amount)
spread(pollution, size, amount)
separate(storms, date, c("year", "month", "day"), sep = "-")
str(storms)
separate(EDAWR$storms, date, c("year", "month", "day"), sep = "-")
library(EDAWR)
separate(EDAWR$storms, date, c("year", "month", "day"), sep = "-")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#devtools::install_github("rstudio/EDAWR")
library(EDAWR)
select(storms, storm, pressure) %>% head()
glimpse(storms)
select(storms, name, pressure) %>% head()
select(storms, name, pressure) %>% head()
filter(storms, wind>=50)  %>%
head()
filter(storms, wind>=50,
name %in% c("Alberto", "Alex", "Allison"))  %>%
head()
pollution %>%
group_by(city) %>%
summarise(mean = mean(amount), sum = sum(amount), n = n())
tb
tb %>%
group_by(country, year) %>%
summarise(cases = sum(cases))
tb %>%
group_by(country, year) %>%
summarise(cases = sum(!is.na(cases)))
tb %>%
group_by(country, year) %>%
summarise(cases = sum(!is.na(cases)))
tb %>%
group_by(country, year) %>%
summarise(cases = sum(!is.na(cases))) %>%
summarise(cases = sum(cases))
install.packages("tseries")
install.packages("rvest")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(rvest)
link <- "https://www.imdb.com/list/ls003041915/"
page <- read_html(link)
name = page %>%
html_nodes(".lister-item-header a") %>%
html_text()
link <- "https://www.imdb.com/list/ls003041915/"
page <- read_html(link)
name  <-  page %>%
html_nodes(".lister-item-header a") %>%
html_text()
year  <- page %>%
html_nodes(".text-muted.unbold") %>%
html_text()
head(year)
year <- year[,4:103]
year <- year[4:103]
rating <- page %>%
html_nodes(".ipl-rating-star.small .ipl-rating-star__rating") %>%
html_text()
synopsis <-page %>%
html_nodes(".ipl-rating-widget+ p , .ratings-metascore+ p") %>%
html_text()
movies <- data.frame(name, year, rating, synopsis, stringsAsFactors = F)
View(movies)
page %>%
html_nodes(".lister-item-header a") %>%
html_attr("href") %>%
paste("https://www.imdb.com", ., sep = "")
html_text()
movie_links <- page %>%
html_nodes(".lister-item-header a") %>%
html_attr("href") %>%
paste("https://www.imdb.com", ., sep = "")
movie_link  <- "https://www.imdb.com/title/tt2911666/?ref_=ttls_li_tt"
movie_page <- read_html(movie_link)
movie_cast <- movie_page %>%
html_nodes(".primary_photo+ td a") %>%
html_text()
movie_cast
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(rvest)
col_link <- "https://www.patriotsoftware.com/blog/accounting/average-cost-living-by-state/"
col_page <- read_html(col_link)
col_table <- col_page %>%
html_nodes("table.has-fixed-layout") %>%
html_table()
col_link <- "https://www.patriotsoftware.com/blog/accounting/average-cost-living-by-state/"
col_page <- read_html(col_link)
col_table <- col_page %>%
html_nodes("table.has-fixed-layout") %>%
html_table()  %>%
.[[1]]
View(col_table)
wiki_link = "https://en.wikipedia.org/wiki/List_of_apple_cultivars"
wiki_page = read_html(wiki_link)
apple_table  <- wiki_page %>%
html_nodes("table")
View(apple_table)
apple_table  <- wiki_page %>%
html_nodes("table") %>%
.[2]
View(apple_table)
apple_table  <- wiki_page %>%
html_nodes("table") %>%
.[2] %>%
html_table() %>%
.[[1]]
View(apple_table)
apple_table  <- wiki_page %>%
html_nodes("table") %>%
.[3] %>%
html_table() %>%
.[[1]]
View(apple_table)
install.packages(c("tidytext", "widyr", "igraph", "ggraph"))
install.packages(c("robotstxt", "rvest", "selectr", "xm12"))
install.packages("xml2")
